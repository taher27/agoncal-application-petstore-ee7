# Test generated by RoostGPT for test testArtillery using AI Type Open AI and AI Model gpt-4

# RoostTestHash=9818bf6b39

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  plugins:
    expect: {}
  payload:
    path: "./nobelPrize_category_year_get_others.csv"
    fields:
      - "category"
      - "year"
    skipHeader: true

scenarios:
  - name: "Testing the /nobelPrize/{category}/{year} endpoint for failure and edge cases"
    flow:
      - log: "Starting test scenario for failure and edge cases"
      - think: 1
      - post:
          url: "/nobelPrize/{{ category }}/{{ year }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400
            - hasProperty: "code"
            - hasProperty: "message"
          beforeRequest:
            - log: "Sending request with invalid category and year"
          afterResponse:
            - log: "Received response for invalid category and year request"
      - think: 1
      - post:
          url: "/nobelPrize/{{ category }}/1900"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 422
            - hasProperty: "code"
            - hasProperty: "message"
          beforeRequest:
            - log: "Sending request with invalid year"
          afterResponse:
            - log: "Received response for invalid year request"
      - think: 1
      - post:
          url: "/nobelPrize/invalid/{{ year }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
            - hasProperty: "code"
            - hasProperty: "message"
          beforeRequest:
            - log: "Sending request with invalid category"
          afterResponse:
            - log: "Received response for invalid category request"
      - think: 1
      - post:
          url: "/nobelPrize/{{ category }}/{{ year }}"
          headers:
            Authorization: "invalid"
          expect:
            - statusCode: 401
            - hasProperty: "code"
            - hasProperty: "message"
          beforeRequest:
            - log: "Sending request with invalid authorization"
          afterResponse:
            - log: "Received response for invalid authorization request"
      - think: 1
      - post:
          url: "/invalidURL"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
            - hasProperty: "code"
            - hasProperty: "message"
          beforeRequest:
            - log: "Sending request to invalid URL"
          afterResponse:
            - log: "Received response for invalid URL request"
      - log: "Ending test scenario for failure and edge cases"
