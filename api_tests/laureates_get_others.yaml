# Test generated by RoostGPT for test testArtillery using AI Type Open AI and AI Model gpt-4

# RoostTestHash=36132f7e7e

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  plugins:
    expect: {}
  payload:
    path: "laureates_get_others.csv"
    fields:
      - "offset"
      - "limit"
      - "sort"
      - "ID"
      - "name"
      - "gender"
      - "motivation"
      - "affiliation"
      - "residence"
      - "birthDate"
      - "birthDateTo"
      - "deathDate"
      - "deathDateTo"
      - "foundedDate"
      - "birthCity"
      - "birthCountry"
      - "birthContinent"
      - "deathCity"
      - "deathCountry"
      - "deathContinent"
      - "foundedCity"
      - "foundedCountry"
      - "foundedContinent"
      - "HeadquartersCity"
      - "HeadquartersCountry"
      - "HeadquartersContinent"
      - "nobelPrizeYear"
      - "yearTo"
      - "nobelPrizeCategory"
      - "format"
      - "csvLang"
    skipHeader: true

scenarios:
  - name: "Testing /2.1/laureates API endpoint"
    flow:
      - think: 3
      - log: "Testing with invalid URL"
        get:
          url: "/2.1/laureate"
          expect:
            - statusCode: 404
      - think: 5
      - log: "Testing with invalid parameters"
        get:
          url: "/2.1/laureates"
          qs:
            offset: "{{ offset }}"
            limit: -1
            sort: "{{ sort }}"
            ID: "{{ ID }}"
            name: "{{ name }}"
            gender: "{{ gender }}"
            motivation: "{{ motivation }}"
            affiliation: "{{ affiliation }}"
            residence: "{{ residence }}"
            birthDate: "{{ birthDate }}"
            birthDateTo: "{{ birthDateTo }}"
            deathDate: "{{ deathDate }}"
            deathDateTo: "{{ deathDateTo }}"
            foundedDate: "{{ foundedDate }}"
            birthCity: "{{ birthCity }}"
            birthCountry: "{{ birthCountry }}"
            birthContinent: "{{ birthContinent }}"
            deathCity: "{{ deathCity }}"
            deathCountry: "{{ deathCountry }}"
            deathContinent: "{{ deathContinent }}"
            foundedCity: "{{ foundedCity }}"
            foundedCountry: "{{ foundedCountry }}"
            foundedContinent: "{{ foundedContinent }}"
            HeadquartersCity: "{{ HeadquartersCity }}"
            HeadquartersCountry: "{{ HeadquartersCountry }}"
            HeadquartersContinent: "{{ HeadquartersContinent }}"
            nobelPrizeYear: "{{ nobelPrizeYear }}"
            yearTo: "{{ yearTo }}"
            nobelPrizeCategory: "{{ nobelPrizeCategory }}"
            format: "{{ format }}"
            csvLang: "{{ csvLang }}"
          expect:
            - statusCode: 400
      - think: 5
      - log: "Testing with non-existing laureate ID"
        get:
          url: "/2.1/laureates"
          qs:
            ID: 99999999
          expect:
            - statusCode: 404
